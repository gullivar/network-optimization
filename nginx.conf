events {
}

http {
    proxy_cache_path /tmp/nginx_cache keys_zone=api_cache:10m max_size=10g inactive=60m use_temp_path=off;

    map $http_host $api_cache_bypass {
        default 1;
        "192.168.68.88:8000" 0;
    }

    # HTTP server for PAC file distribution (browsers require HTTP for self-signed cert scenarios)
    server {
        listen 80;
        server_name localhost;

        # Serve PAC files over HTTP only
        location /wpad.dat {
            alias /etc/nginx/proxy-auto-config/wpad.dat;
            default_type application/x-ns-proxy-autoconfig;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin "*";
        }

        location /proxy.pac {
            alias /etc/nginx/proxy-auto-config/proxy.pac;
            default_type application/x-ns-proxy-autoconfig;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin "*";
        }

        # Redirect other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS reverse proxy with SSL termination and caching
    server {
        listen 443 ssl;
        resolver 8.8.8.8;

        server_name localhost;

        ssl_certificate /etc/nginx/certs/crt.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;

        # Handle proxied HTTPS requests with caching
        location / {
            proxy_pass https://$http_host$request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # SSL verification settings for self-signed certificates
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;

            # Caching configuration
            proxy_cache api_cache;
            proxy_cache_bypass $api_cache_bypass;
            proxy_no_cache $api_cache_bypass;
            proxy_cache_key "$scheme://$http_host$request_uri";
            proxy_cache_valid 200 1m;
            proxy_cache_lock on;
            add_header X-Proxy-Cache $upstream_cache_status always;

            # Expose X-Proxy-Cache header for CORS
            add_header Access-Control-Expose-Headers "X-Proxy-Cache, X-TCP-Congestion-Control, X-TCP-Qdisc, X-Server" always;

            proxy_ignore_headers Cache-Control Expires Set-Cookie Vary;
        }
    }
}